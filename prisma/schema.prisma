datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/server/db/client"
}

// Auth models

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  buildings Building[]
  resources UserResources?
  items     UserItems[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

// Domain models

enum BuildingType {
  townhall
  // storage
  // farm
  // sawmill
  // mine
  // barracks
}

model Building {
  id           String       @id @default(cuid())
  type         BuildingType
  level        Int          @default(1)
  upgradeStart DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum ResourceType {
  gems
  food
  wood
  stone
  gold
}

model UserResources {
  id String @id @default(cuid())

  gems  Int @default(0)
  food  Int @default(0)
  wood  Int @default(0)
  stone Int @default(0)
  gold  Int @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  // @@unique([userId])
}

enum ItemType {
  food_boost_1000
  food_boost_1000000
  wood_boost_1000
  wood_boost_1000000
  stone_boost_1000
  stone_boost_1000000
  gold_boost_1000
  gold_boost_1000000
  // time_skip
}

model UserItems {
  id String @id @default(cuid())

  type   ItemType
  amount Int      @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt()

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, type])
}
